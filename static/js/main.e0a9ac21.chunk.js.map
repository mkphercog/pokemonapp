{"version":3,"sources":["images/questionMark.png","images/pokemon-logo.png","components/Header/Header.css.ts","components/Header/Header.tsx","components/Navigation/Navigation.css.ts","components/Navigation/Navigation.tsx","components/SharedButton/SharedButton.css.ts","components/SharedButton/SharedButton.tsx","components/LoadingComponent/LoadingComponent.css.ts","components/LoadingComponent/LoadingComponent.tsx","store/actions/pokemonDetailsAction.ts","store/types/index.ts","components/RandomPokemonView/RandomPokemonView.css.ts","components/RandomPokemonView/RandomPokemonView.tsx","store/actions/randomPokeAction.ts","functions/randomNumber.ts","store/actions/pokemonListAction.ts","components/PokemonList/PagesControlPanel/PagesControlPanel.css.ts","components/PokemonList/PagesControlPanel/PagesControlPanel.tsx","components/PokemonList/PokemonList.css.ts","components/PokemonList/PokemonList.tsx","components/Main/Main.css.ts","components/Main/Main.tsx","components/Footer/Footer.css.ts","components/Portal/Portal.tsx","components/Footer/Footer.tsx","components/PokeDetails/PokeDetails.css.ts","components/PokeDetails/PokeDetails.tsx","index.css.ts","App.tsx","store/reducers/randomPokeReducer.ts","store/reducers/pokemonListReducer.ts","store/reducers/pokemonDetailsReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["module","exports","HeaderStyled","styled","header","PokemonLogoStyled","img","Header","src","pokemonLogo","NavigationStyled","nav","NavList","ul","NavLinkStyled","NavLink","Navigation","to","exact","ButtonStyled","button","props","isChosen","SharedButton","fun","children","onClick","Base","div","facebook","keyframes","BaseDiv","LoadingComponent","showPokeDetails","pokeUrl","type","payload","Wrapper","Container","Title","h1","Image","RandomPokemonView","randomPokemon","useSelector","state","fetchingRandom","errorRandom","fetchingRandomPng","data","name","id","sprites","prevPokeID","useRef","dispatch","useDispatch","useEffect","URL","current","front_default","a","fetch","then","res","status","url","catch","error","console","log","renderPokeImage","useMemo","length","questionMark","alt","title","handleClickRandom","useCallback","pokemonId","scope","Math","floor","random","json","fetchPokemonList","ControlPanelWrapper","ButtonWrapper","CounterPageForm","form","NumberInput","input","PagesControlPanel","pokePerPageButtons","pokemonList","pokemonsPerPage","currentPage","next","previous","count","useState","String","page","setPage","renderPerPageButtons","map","perPage","key","className","onSubmit","e","preventDefault","Number","handleSubmitPage","min","onChange","target","value","isCorrectLimit","slice","indexOf","handleNextPage","List","Item","PokeName","p","PokemonList","fetchingList","pngs","results","pokemonsWithImages","poke","slicedPokemonIdFromURL","image","find","png","includes","renderItems","pokemonImage","MainStyled","main","Main","path","PortalTarget","FooterStyled","footer","TitleStyled","AuthorLink","Footer","href","Portal","domElement","document","getElementById","ReactDom","createPortal","Board","PokeDetails","isOpen","isLoading","setIsLoading","pokemonDetails","pokeDetails","base_experience","stats","setPokeDetails","err","renderPokeSats","base_stat","stat","MODAL","QuestionMark","GlobalStyles","createGlobalStyle","normalize","AppStyled","App","portalIsOpen","visibility","images","listOfUrls","Promise","all","result","initialState","fetchedRandom","fetchedRandomPng","errorRandomPng","fetchedList","errorList","fetchingImages","fetchedImages","errorImages","fetchingPNG","fetchedPNG","errorPNG","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.e0a9ac21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/questionMark.904ba24f.png\";","module.exports = __webpack_public_path__ + \"static/media/pokemon-logo.956f3234.png\";","import styled from \"styled-components\";\n\nexport const HeaderStyled = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 10vh;\n  background-color: khaki;\n`;\n\nexport const PokemonLogoStyled = styled.img`\n  height: 100%;\n`;\n","import React from \"react\";\nimport { HeaderStyled, PokemonLogoStyled } from \"./Header.css\";\nimport pokemonLogo from \"./../../images/pokemon-logo.png\";\n\nexport const Header: React.FC = () => (\n  <HeaderStyled>\n    <PokemonLogoStyled src={pokemonLogo} />\n  </HeaderStyled>\n);\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const NavigationStyled = styled.nav`\n  width: 100%;\n  background-color: saddlebrown;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  color: burlywood;\n  padding: 5px 15px;\n  text-decoration: none;\n  font-size: 14px;\n  transition: 0.2s;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n\n  :hover {\n    background-color: khaki;\n    color: saddlebrown;\n  }\n\n  &.active {\n    color: saddlebrown;\n    background-color: khaki;\n  }\n`;\n","import React from \"react\";\n\nimport { NavigationStyled, NavList, NavLinkStyled } from \"./Navigation.css\";\n\nexport const Navigation: React.FC = () => (\n  <NavigationStyled>\n    <NavList>\n      <NavLinkStyled to=\"/\" exact>\n        Losuj\n      </NavLinkStyled>\n      <NavLinkStyled to=\"/list\">Lista</NavLinkStyled>\n    </NavList>\n  </NavigationStyled>\n);\n","import styled from \"styled-components\";\n\nexport const ButtonStyled = styled.button`\n  flex-grow: 0;\n  padding: 5px 10px;\n  border: 2px solid khaki;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 14px;\n  color: black;\n  border-radius: 10px;\n  transition: 0.2s;\n  cursor: pointer;\n  outline-style: none;\n\n  background-color: ${(props: OwnProps) =>\n    props.isChosen ? \"khaki\" : \"lightyellow\"};\n  border-color: ${(props: OwnProps) =>\n    props.isChosen ? \"lightyellow\" : \"khaki\"};\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n\n    :hover {\n      transform: scale(1.2);\n      color: black;\n      background-color: khaki;\n      border: 2px solid lightyellow;\n    }\n  }\n`;\n\ninterface OwnProps {\n  isChosen: boolean;\n}\n","import React from \"react\";\nimport { ButtonStyled } from \"./SharedButton.css\";\n\nexport const SharedButton: React.FC<SharedButtonProps> = ({\n  fun,\n  children,\n  isChosen,\n}) => (\n  <ButtonStyled isChosen={isChosen ? isChosen : false} onClick={() => fun()}>\n    {children}\n  </ButtonStyled>\n);\n\ninterface SharedButtonProps {\n  fun: Function;\n  isChosen?: boolean;\n}\n","import styled, { keyframes } from \"styled-components\";\n\nexport const Base = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n`;\n\nconst facebook = keyframes` \n  0% {\n    top: 8px;\n    height: 64px;\n  }\n  50%, 100% {\n    top: 24px;\n    height: 32px;\n  }\n`;\n\nexport const BaseDiv = styled.div`\n  display: inline-block;\n  position: absolute;\n  left: 8px;\n  width: 16px;\n  background: khaki;\n  animation: ${facebook} 1.2s cubic-bezier(0, 0.5, 0.5, 1) infinite;\n\n  :nth-child(1) {\n    left: 8px;\n    animation-delay: -0.24s;\n  }\n  :nth-child(2) {\n    left: 32px;\n    animation-delay: -0.12s;\n  }\n  :nth-child(3) {\n    left: 56px;\n    animation-delay: 0;\n  }\n`;\n","import React from \"react\";\nimport { Base, BaseDiv } from \"./LoadingComponent.css\";\n\nexport const LoadingComponent: React.FC = () => (\n  <Base>\n    <BaseDiv></BaseDiv>\n    <BaseDiv></BaseDiv>\n    <BaseDiv></BaseDiv>\n  </Base>\n);\n","import {\n  SHOW_POKE_DETAILS,\n  HIDE_POKE_DETAILS,\n  SET_POKE_DETAILS,\n} from \"./../types\";\n\nexport const showPokeDetails = (pokeUrl: string) => ({\n  type: SHOW_POKE_DETAILS,\n  payload: pokeUrl,\n});\n\nexport const hidePokeDetails = () => ({\n  type: HIDE_POKE_DETAILS,\n});\n\nexport const setPokeDetails = (pokeDetails: {}) => ({\n  type: SET_POKE_DETAILS,\n  payload: pokeDetails,\n});\n","export const FETCHING_RANDOM = \"FETCHING_RANDOM\";\nexport const FETCHED_RANDOM = \"FETCHED_RANDOM\";\nexport const ERROR_RANDOM = \"ERROR_RANDOM\";\n\nexport const FETCHING_RANDOM_PNG = \"FETCHING_RANDOM_PNG\";\nexport const FETCHED_RANDOM_PNG = \"FETCHED_RANDOM_PNG\";\nexport const ERROR_RANDOM_PNG = \"ERROR_RANDOM_PNG\";\n\nexport const FETCHING_LIST = \"FETCHING_LIST\";\nexport const FETCHED_LIST = \"FETCHED_LIST\";\nexport const ERROR_LIST = \"ERROR_LIST\";\n\nexport const FETCHING_POKE_IMAGES = \"FETCHING_POKE_IMAGES\";\nexport const FETCHED_POKE_IMAGES = \"FETCHED_POKE_IMAGES\";\nexport const ERROR_POKE_IMAGES = \"ERROR_POKE_IMAGES\";\n\nexport const FETCHING_POKE_PNG = \"FETCHING_POKE_PNG\";\nexport const FETCHED_POKE_PNG = \"FETCHED_POKE_PNG\";\nexport const ERROR_POKE_PNG = \"ERROR_POKE_PNG\";\n\nexport const NEXT_LIST_PAGE = \"NEXT_LIST_PAGE\";\nexport const PREV_LIST_PAGE = \"PREV_LIST_PAGE\";\nexport const SET_LIST_PAGE = \"SET_LIST_PAGE\";\nexport const RESET_LIST_PAGE = \"RESET_LIST_PAGE\";\n\nexport const CHANGE_NUMBER_OF_POKEMON_PER_PAGE =\n  \"CHANGE_NUMBER_OF_POKEMON_PER_PAGE\";\n\nexport const SHOW_POKE_DETAILS = \"SHOW_POKE_DETAILS\";\nexport const HIDE_POKE_DETAILS = \"HIDE_POKE_DETAILS\";\nexport const SET_POKE_DETAILS = \"SET_POKE_DETAILS\";\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  margin-bottom: 50px;\n  min-height: 200px;\n\n  @media (orientation: landscape) and (max-width: 768px) {\n    min-height: 100px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 20px;\n  text-transform: uppercase;\n\n  @media (min-width: 768px) {\n    font-size: 25px;\n  }\n`;\n\nexport const Image = styled.img`\n  margin-top: 10px;\n  max-width: 100px;\n  max-height: 100px;\n  transform: scale(1.4);\n\n  @media (min-width: 1024px) {\n    cursor: pointer;\n  }\n`;\n","import React, { useCallback, useEffect, useRef, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StateInterface } from \"./../../store/interfaces\";\n\nimport { SharedButton } from \"./../SharedButton/SharedButton\";\nimport { LoadingComponent } from \"../LoadingComponent/LoadingComponent\";\nimport {\n  fetchRandomPokemon,\n  fetchRandomPokemonPNG,\n} from \"../../store/actions/randomPokeAction\";\nimport { showPokeDetails } from \"./../../store/actions/pokemonDetailsAction\";\n\nimport { randomNumber } from \"./../../functions/randomNumber\";\nimport { Wrapper, Container, Title, Image } from \"./RandomPokemonView.css\";\nimport questionMark from \"./../../images/questionMark.png\";\n\nconst pokemonCount = 807;\nconst URL = \"https://pokeapi.co/api/v2/pokemon/\";\n\nexport const RandomPokemonView: React.FC = () => {\n  const randomPokemon = useSelector(\n    (state: StateInterface) => state.randomPokemon\n  );\n  const { fetchingRandom, errorRandom, fetchingRandomPng } = randomPokemon;\n  const { name, id, sprites } = randomPokemon.data;\n  const prevPokeID = useRef(id);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (sprites && id !== 0) {\n      if (id !== prevPokeID.current) {\n        dispatch(fetchRandomPokemonPNG(sprites.front_default));\n        prevPokeID.current = id;\n      }\n    }\n  }, [id, sprites, dispatch]);\n\n  const renderPokeImage = useMemo(\n    () =>\n      !fetchingRandomPng ? (\n        <Image\n          src={\n            sprites.front_default.length ? sprites.front_default : questionMark\n          }\n          onClick={() => {\n            if (sprites.front_default.length)\n              dispatch(showPokeDetails(`${URL}${id}`));\n          }}\n          alt=\"Pokemon\"\n          title={name}\n        />\n      ) : (\n        <LoadingComponent />\n      ),\n    [fetchingRandomPng, name, sprites, dispatch, id]\n  );\n\n  const handleClickRandom = useCallback(() => {\n    dispatch(fetchRandomPokemon(randomNumber(pokemonCount)));\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Container>\n        {!fetchingRandom && !errorRandom ? (\n          <>\n            <Title>{`${name} ${id ? `(${id})` : \"\"}`}</Title>\n            {renderPokeImage}\n          </>\n        ) : (\n          <LoadingComponent />\n        )}\n      </Container>\n      <SharedButton fun={handleClickRandom}>Losuj</SharedButton>\n    </Wrapper>\n  );\n};\n","import {\n  FETCHING_RANDOM,\n  FETCHED_RANDOM,\n  ERROR_RANDOM,\n  FETCHING_RANDOM_PNG,\n  FETCHED_RANDOM_PNG,\n  ERROR_RANDOM_PNG,\n} from \"./../types/\";\nconst URL = \"https://pokeapi.co/api/v2/pokemon/\";\n\nexport const fetchRandomPokemon = (pokemonId: number) => {\n  return async (dispatch: Function) => {\n    dispatch({\n      type: FETCHING_RANDOM,\n    });\n\n    return await fetch(`${URL}${pokemonId}`)\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        }\n      })\n      .then((res) =>\n        dispatch({\n          type: FETCHED_RANDOM,\n          payload: res,\n        })\n      )\n      .catch((error) => {\n        dispatch({\n          type: ERROR_RANDOM,\n        });\n        console.log(error);\n      });\n  };\n};\n\nexport const fetchRandomPokemonPNG = (URL: string) => {\n  return async (dispatch: Function) => {\n    dispatch({\n      type: FETCHING_RANDOM_PNG,\n    });\n\n    return await fetch(URL)\n      .then((res) => {\n        if (res.status === 200) {\n          return res;\n        }\n      })\n      .then((res) =>\n        dispatch({\n          type: FETCHED_RANDOM_PNG,\n          payload: res?.url,\n        })\n      )\n      .catch((error) => {\n        dispatch({\n          type: ERROR_RANDOM_PNG,\n        });\n        console.log(error);\n      });\n  };\n};\n","export const randomNumber = (scope: number) =>\n  Math.floor(Math.random() * scope + 1);\n","import {\n  FETCHING_LIST,\n  FETCHED_LIST,\n  ERROR_LIST,\n  FETCHING_POKE_IMAGES,\n  FETCHED_POKE_IMAGES,\n  ERROR_POKE_IMAGES,\n  FETCHING_POKE_PNG,\n  FETCHED_POKE_PNG,\n  ERROR_POKE_PNG,\n  NEXT_LIST_PAGE,\n  PREV_LIST_PAGE,\n  SET_LIST_PAGE,\n  CHANGE_NUMBER_OF_POKEMON_PER_PAGE,\n  RESET_LIST_PAGE,\n} from \"../types\";\n\nexport const fetchPokemonList = (URL: string) => {\n  return async (dispatch: Function) => {\n    dispatch({\n      type: FETCHING_LIST,\n    });\n\n    return await fetch(`${URL}`)\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        }\n      })\n      .then((res) => {\n        dispatch({\n          type: FETCHED_LIST,\n          payload: res,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_LIST,\n        });\n        console.log(error);\n      });\n  };\n};\n\nexport const fetchPokemonImagesUrls = (\n  listOfUrls: { name: string; url: string }[]\n) => {\n  return async (dispatch: Function) => {\n    dispatch({\n      type: FETCHING_POKE_IMAGES,\n    });\n\n    return await Promise.all(\n      listOfUrls.map(\n        async (result: { url: string }) =>\n          await (await fetch(result.url))\n            .json()\n            .then((res) => {\n              dispatch({\n                type: FETCHED_POKE_IMAGES,\n                payload: res.sprites.front_default,\n              });\n            })\n            .catch((error) => {\n              dispatch({\n                type: ERROR_POKE_IMAGES,\n              });\n              console.log(error);\n            })\n      )\n    );\n  };\n};\n\nexport const fetchPokemonPNG = (listOfUrls: string[]) => {\n  return async (dispatch: Function) => {\n    dispatch({\n      type: FETCHING_POKE_PNG,\n    });\n\n    return await Promise.all(\n      listOfUrls.map(\n        async (result: string) =>\n          await fetch(result)\n            .then((res) => {\n              dispatch({\n                type: FETCHED_POKE_PNG,\n                payload: res.url,\n              });\n            })\n            .catch((error) => {\n              dispatch({\n                type: ERROR_POKE_PNG,\n              });\n              console.log(error);\n            })\n      )\n    );\n  };\n};\n\nexport const nextPage = () => ({\n  type: NEXT_LIST_PAGE,\n});\n\nexport const prevPage = () => ({\n  type: PREV_LIST_PAGE,\n});\n\nexport const setPageAction = (pageNumber: number) => ({\n  type: SET_LIST_PAGE,\n  payload: pageNumber,\n});\n\nexport const resetPages = () => ({\n  type: RESET_LIST_PAGE,\n});\n\nexport const changeNumberOfPokemonPerPage = (num: number) => ({\n  type: CHANGE_NUMBER_OF_POKEMON_PER_PAGE,\n  payload: num,\n});\n","import styled from \"styled-components\";\n\nexport const ControlPanelWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 45%;\n  margin: 10px 0;\n\n  @media (min-width: 768px) {\n    width: 20%;\n  }\n\n  .desc {\n    font-size: 10px;\n    text-align: center;\n    margin-top: 20px;\n\n    @media (min-width: 768px) {\n      font-size: 14px;\n    }\n  }\n\n  .prev-page {\n    transform: rotate(180deg);\n  }\n\n  .prev-page,\n  .next-page {\n    font-size: 14px;\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n  align-items: center;\n  margin-top: 10px;\n`;\n\nexport const CounterPageForm = styled.form`\n  margin: 10px;\n  width: 30%;\n`;\n\nexport const NumberInput = styled.input`\n  padding: 5px;\n  border: none;\n  width: 100%;\n  text-align: center;\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &:focus {\n    outline-style: none;\n  }\n`;\n","import React, { useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StateInterface } from \"./../../../store/interfaces\";\n\nimport { SharedButton } from \"./../../SharedButton/SharedButton\";\nimport {\n  fetchPokemonList,\n  prevPage,\n  nextPage,\n  setPageAction,\n  resetPages,\n  changeNumberOfPokemonPerPage,\n} from \"./../../../store/actions/pokemonListAction\";\n\nimport {\n  ControlPanelWrapper,\n  ButtonWrapper,\n  CounterPageForm,\n  NumberInput,\n} from \"./PagesControlPanel.css\";\n\nexport const PagesControlPanel: React.FC<PagesControlPanelProps> = ({\n  pokePerPageButtons,\n}) => {\n  const pokemonList = useSelector((state: StateInterface) => state.pokemonList);\n  const { pokemonsPerPage, currentPage } = pokemonList;\n  const { next, previous, count } = pokemonList.data;\n  const [page, setPage] = useState(String(currentPage));\n  const dispatch = useDispatch();\n\n  const renderPerPageButtons = useMemo(\n    () =>\n      pokePerPageButtons.map((perPage: number) => (\n        <SharedButton\n          key={perPage}\n          isChosen={pokemonsPerPage === perPage ? true : false}\n          fun={() => {\n            dispatch(changeNumberOfPokemonPerPage(perPage));\n            dispatch(resetPages());\n            setPage(\"1\");\n          }}\n        >\n          {perPage}\n        </SharedButton>\n      )),\n    [dispatch, pokePerPageButtons, pokemonsPerPage]\n  );\n\n  const handleSubmitPage = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (\n      Number(page) !== currentPage &&\n      page !== \"\" &&\n      Number(page) > 0 &&\n      Number(page) <= count / pokemonsPerPage\n    ) {\n      const URL = `https://pokeapi.co/api/v2/pokemon?offset=${\n        Number(page) * pokemonsPerPage - pokemonsPerPage\n      }&limit=${pokemonsPerPage}`;\n      dispatch(setPageAction(Number(page)));\n      dispatch(fetchPokemonList(URL));\n    } else if (Number(page) > count / pokemonsPerPage) {\n      setPage(String(Math.floor(count / pokemonsPerPage)));\n    }\n  };\n\n  const handlePrevPage = () => {\n    if (previous) {\n      dispatch(prevPage());\n      dispatch(fetchPokemonList(previous));\n      setPage(String(currentPage - 1));\n    }\n  };\n\n  const handleNextPage = () => {\n    const searchingText = \"limit=\";\n    const isCorrectLimit = next?.slice(\n      next.indexOf(searchingText) + searchingText.length,\n      next.length\n    );\n    if (next && Number(isCorrectLimit) === pokemonsPerPage) {\n      dispatch(nextPage());\n      dispatch(fetchPokemonList(next));\n      setPage(String(currentPage + 1));\n    }\n  };\n\n  return (\n    <ControlPanelWrapper>\n      <ButtonWrapper>\n        <SharedButton fun={() => handlePrevPage()}>\n          <i className=\"fas fa-chevron-right prev-page\"></i>\n        </SharedButton>\n        <CounterPageForm onSubmit={(e) => handleSubmitPage(e)}>\n          <NumberInput\n            type=\"number\"\n            min=\"1\"\n            onChange={(e) => setPage(e.target.value)}\n            value={String(page)}\n          />\n        </CounterPageForm>\n        <SharedButton fun={() => handleNextPage()}>\n          <i className=\"fas fa-chevron-right next-page\"></i>\n        </SharedButton>\n      </ButtonWrapper>\n      <p className=\"desc\">Ilość pokemonów na stronę:</p>\n      <ButtonWrapper>{renderPerPageButtons}</ButtonWrapper>\n    </ControlPanelWrapper>\n  );\n};\n\ninterface PagesControlPanelProps {\n  pokePerPageButtons: number[];\n}\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-height: 100%;\n  padding: 10px;\n`;\n\nexport const List = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  width: 95%;\n  flex-grow: 1;\n  margin: 15px 0 0;\n  padding: 10px;\n\n  @media (min-width: 768px) {\n    width: 85%;\n  }\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: calc(100% / 3);\n  height: calc(100% / 3);\n  margin: 15px 0;\n  padding: 5px;\n  border-radius: 10px;\n  transition: 0.2s;\n\n  @media (min-width: 1024px) {\n    width: calc(100% / 4);\n    height: calc(100% / 4);\n    margin: 15px 20px;\n    background-color: rgba(0, 0, 0, 0.02);\n    :hover {\n      background-color: lightgray;\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const PokeName = styled.p`\n  text-transform: uppercase;\n  font-size: 10px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const Image = styled.img`\n  max-width: 80px;\n  max-height: 80px;\n  margin-top: 10px;\n\n  @media (min-width: 768px) {\n    max-width: 100px;\n    max-height: 100px;\n  }\n`;\n","import React, { useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { StateInterface } from \"./../../store/interfaces\";\nimport { showPokeDetails } from \"./../../store/actions/pokemonDetailsAction\";\n\nimport { PagesControlPanel } from \"./PagesControlPanel/PagesControlPanel\";\nimport { LoadingComponent } from \"./../LoadingComponent/LoadingComponent\";\n\nimport { Wrapper, List, Item, PokeName, Image } from \"./PokemonList.css\";\nimport questionMark from \"./../../images/questionMark.png\";\n\nexport const PokemonList: React.FC = () => {\n  const pokemonList = useSelector((state: StateInterface) => state.pokemonList);\n  const dispatch = useDispatch();\n  const { fetchingList, pngs, pokemonsPerPage } = pokemonList;\n  const { results } = pokemonList.data;\n\n  const pokemonsWithImages = useMemo(() => {\n    if (!(pngs.length < pokemonsPerPage)) {\n      return results.map((poke) => {\n        const slicedPokemonIdFromURL = poke.url.slice(\n          poke.url.indexOf(\"/pokemon/\"),\n          poke.url.length - 1\n        );\n        poke.image =\n          pngs.find((png) => png.includes(`${slicedPokemonIdFromURL}.png`)) ||\n          \"Not found\";\n        return poke;\n      });\n    }\n    return [];\n  }, [pngs, results, pokemonsPerPage]);\n\n  const renderItems = useMemo(\n    () =>\n      pokemonsWithImages.map((poke) => {\n        const pokemonImage =\n          poke.image === \"Not found\" ? (\n            <Image src={questionMark} alt={poke.name} />\n          ) : (\n            <Image src={poke.image} alt={poke.name} />\n          );\n        return (\n          <Item\n            key={poke.name}\n            onClick={() => {\n              dispatch(showPokeDetails(poke.url));\n            }}\n          >\n            <PokeName>{poke.name}</PokeName>\n            {pokemonImage}\n          </Item>\n        );\n      }),\n    [pokemonsWithImages, dispatch]\n  );\n\n  return (\n    <Wrapper>\n      <List>\n        {fetchingList || pngs.length < pokemonsPerPage ? (\n          <LoadingComponent />\n        ) : (\n          renderItems\n        )}\n      </List>\n      <PagesControlPanel pokePerPageButtons={[6, 12, 21]} />\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const MainStyled = styled.main`\n  flex-grow: 1;\n  width: 100%;\n  background-color: whitesmoke;\n`;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { RandomPokemonView } from \"./../RandomPokemonView/RandomPokemonView\";\nimport { PokemonList } from \"./../PokemonList/PokemonList\";\n\nimport { MainStyled } from \"./Main.css\";\n\nexport const Main: React.FC = () => (\n  <MainStyled>\n    <Switch>\n      <Route path=\"/\" exact>\n        <RandomPokemonView />\n      </Route>\n      <Route path=\"/list\" exact>\n        <PokemonList />\n      </Route>\n    </Switch>\n  </MainStyled>\n);\n","import styled from \"styled-components\";\n\nexport const FooterStyled = styled.footer`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  padding: 5px 0;\n  background-color: gray;\n`;\n\nexport const TitleStyled = styled.p`\n  color: white;\n  font-size: 12px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const AuthorLink = styled.a`\n  color: khaki;\n  text-decoration: none;\n  transition: 0.2s;\n\n  @media (min-width: 1024px) {\n    :hover {\n      color: goldenrod;\n    }\n  }\n`;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\n\nexport enum PortalTarget {\n  MODAL = \"modal-portal\",\n  ROOT = \"root\",\n}\n\nexport const Portal: React.FC<PortalProps> = ({ target, children }) => {\n  const domElement = document.getElementById(target);\n\n  return domElement ? ReactDom.createPortal(children, domElement) : null;\n};\n\ninterface PortalProps {\n  target: PortalTarget;\n}\n","import React from \"react\";\nimport { FooterStyled, TitleStyled, AuthorLink } from \"./Footer.css\";\n\nexport const Footer: React.FC = () => (\n  <FooterStyled>\n    <TitleStyled>\n      Projekt i realizacja{\" \"}\n      <AuthorLink\n        href=\"https://mkphercog.github.io/mywebsite/#/\"\n        target=\"blanc\"\n      >\n        Marcin Hercog\n      </AuthorLink>\n    </TitleStyled>\n  </FooterStyled>\n);\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(200, 200, 200, 0.4);\n`;\n\nexport const Board = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 70%;\n  height: 80%;\n  border-radius: 20px;\n  background-color: rgba(160, 160, 160, 0.96);\n  overflow: auto;\n\n  @media (min-width: 500px) and (orientation: landscape) {\n    width: 45%;\n    height: 85%;\n  }\n\n  @media (min-width: 768px) {\n    width: 50%;\n    height: 60%;\n  }\n\n  @media (min-width: 1024px) {\n    width: 30%;\n    height: 70%;\n  }\n\n  h1 {\n    margin-top: 20px;\n    color: white;\n    font-size: 18px;\n    text-transform: uppercase;\n    text-align: center;\n\n    @media (min-width: 768px) {\n      font-size: 22px;\n    }\n  }\n\n  img {\n    margin-bottom: 15px;\n    width: 110px;\n    height: 110px;\n\n    @media (min-width: 768px) {\n      margin-bottom: 40px;\n      width: 150px;\n      height: 150px;\n    }\n  }\n\n  ul {\n    list-style: none;\n    margin-top: 10px;\n\n    @media (min-width: 768px) {\n      margin-top: 20px;\n    }\n\n    li {\n      margin: 10px 0;\n    }\n  }\n\n  p {\n    color: white;\n    ::first-letter {\n      text-transform: uppercase;\n    }\n\n    @media (min-width: 768px) {\n      font-size: 19px;\n    }\n  }\n\n  p > span {\n    font-weight: bold;\n  }\n`;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport { Portal, PortalTarget } from \"./../Portal/Portal\";\nimport {\n  hidePokeDetails,\n  setPokeDetails,\n} from \"./../../store/actions/pokemonDetailsAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { StateInterface } from \"./../../store/interfaces\";\nimport QuestionMark from \"./../../images/questionMark.png\";\n\nimport { Wrapper, Board } from \"./PokeDetails.css\";\n\nexport const PokeDetails: React.FC<PokeDetailsProps> = ({ isOpen }) => {\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n  const pokemonDetails = useSelector(\n    (state: StateInterface) => state.pokemonDetails\n  );\n  const { pokeUrl, pokeDetails } = pokemonDetails;\n  const { name, id, base_experience, sprites, stats } = pokeDetails;\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (pokeUrl.length) {\n      fetch(pokeUrl)\n        .then((res) => {\n          if (res.status === 200) return res.json();\n        })\n        .then((res) => {\n          dispatch(setPokeDetails(res));\n          setIsLoading(false);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [pokeUrl, dispatch]);\n\n  const renderPokeSats = useMemo(\n    () =>\n      stats\n        ? stats.map(({ base_stat, stat }) => (\n            <li key={stat.name}>\n              <p>\n                {stat.name}: <span>{base_stat}</span>\n              </p>\n            </li>\n          ))\n        : [],\n    [stats]\n  );\n\n  return isOpen ? (\n    <Portal target={PortalTarget.MODAL}>\n      <Wrapper onClick={() => dispatch(hidePokeDetails())}>\n        {!isLoading ? (\n          <Board>\n            <h1>\n              {name} ({id})\n            </h1>\n            <img\n              src={sprites.front_default ? sprites.front_default : QuestionMark}\n              alt=\"\"\n            />\n            <p>Statystyki:</p>\n            <ul>\n              <li>\n                <p>\n                  Exp: <span>{base_experience}</span>\n                </p>\n              </li>\n              {renderPokeSats}\n            </ul>\n          </Board>\n        ) : null}\n      </Wrapper>\n    </Portal>\n  ) : null;\n};\n\ninterface PokeDetailsProps {\n  isOpen: boolean;\n}\n","import styled, { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\n\nexport const GlobalStyles = createGlobalStyle`\n  ${normalize}\n*{\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n font-family: Arial, Helvetica, sans-serif;\n} \n`;\n\nexport const AppStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  margin: 0 auto;\n\n  @media (min-width: 1024px) {\n    width: 1024px;\n  }\n`;\n","import React, { useEffect } from \"react\";\n\nimport { Header } from \"./components/Header/Header\";\nimport { Navigation } from \"./components/Navigation/Navigation\";\nimport { Main } from \"./components/Main/Main\";\nimport { Footer } from \"./components/Footer/Footer\";\nimport { PokeDetails } from \"./components/PokeDetails/PokeDetails\";\nimport {\n  fetchPokemonList,\n  fetchPokemonImagesUrls,\n  fetchPokemonPNG,\n} from \"./store/actions/pokemonListAction\";\nimport { StateInterface } from \"./store/interfaces\";\n\nimport { GlobalStyles, AppStyled } from \"./index.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst startingPoint = 0;\n\nexport const App = () => {\n  const pokemonList = useSelector((state: StateInterface) => state.pokemonList);\n  const portalIsOpen = useSelector(\n    (state: StateInterface) => state.pokemonDetails.visibility\n  );\n  const { fetchingList, images, pokemonsPerPage } = pokemonList;\n  const { results } = pokemonList.data;\n  const URL = `https://pokeapi.co/api/v2/pokemon?limit=${pokemonsPerPage}&offset=${startingPoint}`;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPokemonList(URL));\n  }, [dispatch, URL]);\n\n  useEffect(() => {\n    if (!fetchingList) dispatch(fetchPokemonImagesUrls(results));\n  }, [fetchingList, results, dispatch]);\n\n  useEffect(() => {\n    if (images.length === pokemonsPerPage) dispatch(fetchPokemonPNG(images));\n  }, [images, dispatch, pokemonsPerPage]);\n\n  return (\n    <AppStyled>\n      <Header />\n      <Navigation />\n      <Main />\n      <Footer />\n      <GlobalStyles />\n      <PokeDetails isOpen={portalIsOpen} />\n    </AppStyled>\n  );\n};\n","import {\n  FETCHING_RANDOM,\n  FETCHED_RANDOM,\n  ERROR_RANDOM,\n  FETCHING_RANDOM_PNG,\n  FETCHED_RANDOM_PNG,\n  ERROR_RANDOM_PNG,\n} from \"./../types\";\n\nconst initialState = {\n  fetchingRandom: false,\n  fetchedRandom: false,\n  errorRandom: false,\n  fetchingRandomPng: false,\n  fetchedRandomPng: false,\n  errorRandomPng: false,\n  data: {\n    name: \"\",\n    id: 0,\n    sprites: {\n      front_default: \"\",\n    },\n  },\n  png: \"\",\n};\n\nexport const randomPokeReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case FETCHING_RANDOM:\n      return {\n        ...state,\n        fetchingRandom: true,\n        fetchedRandom: false,\n        errorRandom: false,\n        data: {\n          name: \"\",\n          id: 0,\n          sprites: {\n            front_default: \"\",\n          },\n        },\n        png: \"\",\n      };\n    case FETCHED_RANDOM:\n      return {\n        ...state,\n        fetchingRandom: false,\n        fetchedRandom: true,\n        errorRandom: false,\n        data: action.payload,\n      };\n    case ERROR_RANDOM:\n      return {\n        ...state,\n        fetchingRandom: false,\n        fetchedRandom: false,\n        errorRandom: true,\n        data: {\n          name: \"\",\n          id: 0,\n          sprites: {\n            front_default: \"\",\n          },\n        },\n      };\n\n    case FETCHING_RANDOM_PNG:\n      return {\n        ...state,\n        fetchingRandomPng: true,\n        fetchedRandomPng: false,\n        errorRandomPng: false,\n        png: \"\",\n      };\n    case FETCHED_RANDOM_PNG:\n      return {\n        ...state,\n        fetchingRandomPng: false,\n        fetchedRandomPng: true,\n        errorRandomPng: false,\n        png: action.payload,\n      };\n    case ERROR_RANDOM_PNG:\n      return {\n        ...state,\n        fetchingRandomPng: false,\n        fetchedRandomPng: false,\n        errorRandomPng: true,\n        png: \"\",\n      };\n    default:\n      return state;\n  }\n};\n\ninterface Action {\n  type: string;\n  payload: {\n    name: string;\n    id: number;\n    sprites: {\n      front_default: string;\n    };\n  };\n}\n","import {\n  FETCHING_LIST,\n  FETCHED_LIST,\n  ERROR_LIST,\n  FETCHING_POKE_IMAGES,\n  FETCHED_POKE_IMAGES,\n  ERROR_POKE_IMAGES,\n  FETCHING_POKE_PNG,\n  FETCHED_POKE_PNG,\n  ERROR_POKE_PNG,\n  NEXT_LIST_PAGE,\n  PREV_LIST_PAGE,\n  SET_LIST_PAGE,\n  RESET_LIST_PAGE,\n  CHANGE_NUMBER_OF_POKEMON_PER_PAGE,\n} from \"../types\";\n\nconst initialState = {\n  fetchingList: false,\n  fetchedList: false,\n  errorList: false,\n  fetchingImages: false,\n  fetchedImages: false,\n  errorImages: false,\n  fetchingPNG: false,\n  fetchedPNG: false,\n  errorPNG: false,\n  data: {\n    count: 0,\n    next: \"\",\n    previous: \"\",\n    results: [],\n  },\n  images: [],\n  pngs: [],\n  currentPage: 1,\n  pokemonsPerPage: 6,\n};\n\nexport const pokemonListReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case FETCHING_LIST:\n      return {\n        ...state,\n        fetchingList: true,\n        fetchedList: false,\n        errorList: false,\n        data: {\n          count: 0,\n          next: \"\",\n          previous: \"\",\n          results: [],\n        },\n        images: [],\n        pngs: [],\n      };\n    case FETCHED_LIST:\n      return {\n        ...state,\n        fetchingList: false,\n        fetchedList: true,\n        errorList: false,\n        data: action.payload,\n      };\n    case ERROR_LIST:\n      return {\n        ...state,\n        fetchingList: false,\n        fetchedList: false,\n        errorList: true,\n        data: {\n          count: 0,\n          next: \"\",\n          previous: \"\",\n          results: [],\n        },\n      };\n\n    case FETCHING_POKE_IMAGES:\n      return {\n        ...state,\n        fetchingImages: true,\n        fetchedImages: false,\n        errorImages: false,\n        images: [],\n      };\n    case FETCHED_POKE_IMAGES:\n      return {\n        ...state,\n        fetchingImages: false,\n        fetchedImages: true,\n        errorImages: false,\n        images: [...state.images, action.payload],\n      };\n    case ERROR_POKE_IMAGES:\n      return {\n        ...state,\n        fetchingImages: false,\n        fetchedImages: false,\n        errorImages: true,\n        images: [],\n      };\n\n    case FETCHING_POKE_PNG:\n      return {\n        ...state,\n        fetchingPNG: true,\n        fetchedPNG: false,\n        errorPNG: false,\n        pngs: [],\n      };\n    case FETCHED_POKE_PNG:\n      return {\n        ...state,\n        fetchingPNG: false,\n        fetchedPNG: true,\n        errorPNG: false,\n        pngs: [...state.pngs, action.payload],\n      };\n    case ERROR_POKE_PNG:\n      return {\n        ...state,\n        fetchingPNG: false,\n        fetchedPNG: false,\n        errorPNG: true,\n        pngs: [],\n      };\n\n    case NEXT_LIST_PAGE:\n      return {\n        ...state,\n        currentPage: state.currentPage + 1,\n      };\n    case PREV_LIST_PAGE:\n      return {\n        ...state,\n        currentPage: state.currentPage - 1,\n      };\n    case SET_LIST_PAGE:\n      return {\n        ...state,\n        currentPage: action.payload,\n      };\n    case RESET_LIST_PAGE:\n      return {\n        ...state,\n        currentPage: 1,\n      };\n    case CHANGE_NUMBER_OF_POKEMON_PER_PAGE:\n      return {\n        ...state,\n        pokemonsPerPage: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\ninterface Action {\n  type: string;\n  payload: {} | [];\n}\n","import {\n  SHOW_POKE_DETAILS,\n  HIDE_POKE_DETAILS,\n  SET_POKE_DETAILS,\n} from \"./../types/\";\n\nconst initialState = {\n  visibility: false,\n  pokeUrl: \"\",\n  pokeDetails: {},\n};\n\nexport const pokemonDetailsReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case SHOW_POKE_DETAILS:\n      return {\n        ...state,\n        visibility: true,\n        pokeUrl: action.payload,\n      };\n\n    case HIDE_POKE_DETAILS:\n      return {\n        ...state,\n        visibility: false,\n        pokeUrl: \"\",\n        pokeDetails: {},\n      };\n\n    case SET_POKE_DETAILS:\n      return { ...state, pokeDetails: action.payload };\n\n    default:\n      return state;\n  }\n};\n\ninterface Action {\n  type: string;\n  payload: string | {};\n}\n","import { combineReducers } from \"redux\";\nimport { randomPokeReducer } from \"./randomPokeReducer\";\nimport { pokemonListReducer } from \"./pokemonListReducer\";\nimport { pokemonDetailsReducer } from \"./pokemonDetailsReducer\";\n\nexport const rootReducer = combineReducers({\n  randomPokemon: randomPokeReducer,\n  pokemonList: pokemonListReducer,\n  pokemonDetails: pokemonDetailsReducer,\n});\n","import { createStore } from \"redux\";\nimport { rootReducer } from \"./../store/reducers/\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}