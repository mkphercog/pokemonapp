{"version":3,"sources":["images/questionMark.png","images/pokemon-logo.png","components/Header/Header.css.ts","components/Header/Header.tsx","components/Navigation/Navigation.css.ts","components/Navigation/Navigation.tsx","components/SharedButton/SharedButton.css.ts","components/SharedButton/SharedButton.tsx","components/LoadingComponent/LoadingComponent.css.ts","components/LoadingComponent/LoadingComponent.tsx","components/RandomPokemonView/RandomPokemonView.css.ts","components/RandomPokemonView/RandomPokemonView.tsx","store/actions/randomPokeAction.ts","store/types/index.ts","functions/randomNumber.ts","store/actions/pokemonListAction.ts","components/PokemonList/PagesControlPanel/PagesControlPanel.css.ts","components/PokemonList/PagesControlPanel/PagesControlPanel.tsx","components/PokemonList/PokemonList.css.ts","components/PokemonList/PokemonList.tsx","components/Main/Main.css.ts","components/Main/Main.tsx","components/Footer/Footer.css.ts","components/Footer/Footer.tsx","index.css.ts","App.tsx","store/reducers/randomPokeReducer.ts","store/reducers/pokemonListReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["module","exports","HeaderStyled","styled","header","PokemonLogoStyled","img","Header","src","pokemonLogo","NavigationStyled","nav","NavList","ul","NavLinkStyled","NavLink","Navigation","to","exact","ButtonStyled","button","SharedButton","fun","children","onClick","Base","div","facebook","keyframes","BaseDiv","LoadingComponent","Wrapper","Container","Title","h1","Image","RandomPokemonView","randomPokemon","useSelector","state","fetchingRandom","errorRandom","fetchingRandomPng","data","name","id","sprites","prevPokeID","useRef","dispatch","useDispatch","useEffect","URL","current","front_default","a","type","fetch","then","res","status","payload","url","catch","error","console","log","renderPokeImage","useMemo","length","questionMark","alt","title","handleClickRandom","useCallback","pokemonId","scope","Math","floor","random","json","fetchPokemonList","ControlPanelWrapper","ButtonWrapper","CounterPageForm","form","NumberInput","input","PagesControlPanel","pokePerPageButtons","pokemonList","pokemonsPerPage","currentPage","next","previous","count","useState","String","page","setPage","renderPerPageButtons","map","perPage","key","className","onSubmit","e","preventDefault","Number","handleSubmitPage","min","onChange","target","value","isCorrectLimit","slice","indexOf","handleNextPage","List","Item","PokeName","p","PokemonList","fetchingList","pngs","results","pokemonsWithImages","poke","slicedPokemonIdFromURL","image","find","png","includes","renderItems","pokemonImage","MainStyled","main","Main","path","FooterStyled","footer","TitleStyled","AuthorLink","Footer","href","GlobalStyles","createGlobalStyle","normalize","AppStyled","App","images","listOfUrls","Promise","all","result","initialState","fetchedRandom","fetchedRandomPng","errorRandomPng","fetchedList","errorList","fetchingImages","fetchedImages","errorImages","fetchingPNG","fetchedPNG","errorPNG","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.e3f3538d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/questionMark.904ba24f.png\";","module.exports = __webpack_public_path__ + \"static/media/pokemon-logo.956f3234.png\";","import styled from \"styled-components\";\n\nexport const HeaderStyled = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 10vh;\n  background-color: khaki;\n`;\n\nexport const PokemonLogoStyled = styled.img`\n  height: 100%;\n`;\n","import React from \"react\";\nimport { HeaderStyled, PokemonLogoStyled } from \"./Header.css\";\nimport pokemonLogo from \"./../../images/pokemon-logo.png\";\n\nexport const Header: React.FC = () => (\n  <HeaderStyled>\n    <PokemonLogoStyled src={pokemonLogo} />\n  </HeaderStyled>\n);\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const NavigationStyled = styled.nav`\n  width: 100%;\n  background-color: saddlebrown;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  color: burlywood;\n  padding: 5px 15px;\n  text-decoration: none;\n  font-size: 14px;\n  transition: 0.2s;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n\n  :hover {\n    background-color: khaki;\n    color: saddlebrown;\n  }\n\n  &.active {\n    color: saddlebrown;\n    background-color: khaki;\n  }\n`;\n","import React from \"react\";\n\nimport { NavigationStyled, NavList, NavLinkStyled } from \"./Navigation.css\";\n\nexport const Navigation: React.FC = () => (\n  <NavigationStyled>\n    <NavList>\n      <NavLinkStyled to=\"/\" exact>\n        Losuj\n      </NavLinkStyled>\n      <NavLinkStyled to=\"/list\">Lista</NavLinkStyled>\n    </NavList>\n  </NavigationStyled>\n);\n","import styled from \"styled-components\";\n\nexport const ButtonStyled = styled.button`\n  flex-grow: 0;\n  padding: 5px 10px;\n  background-color: lightyellow;\n  border: 2px solid khaki;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 14px;\n  color: black;\n  border-radius: 10px;\n  transition: 0.2s;\n  cursor: pointer;\n  outline-style: none;\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  :hover {\n    transform: scale(1.2);\n    color: black;\n    background-color: khaki;\n    border: 2px solid lightyellow;\n  }\n`;\n","import React from \"react\";\nimport { ButtonStyled } from \"./SharedButton.css\";\n\nexport const SharedButton: React.FC<SharedButtonProps> = ({\n  fun,\n  children,\n}) => <ButtonStyled onClick={() => fun()}>{children}</ButtonStyled>;\n\ninterface SharedButtonProps {\n  fun: Function;\n}\n","import styled, { keyframes } from \"styled-components\";\n\nexport const Base = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n`;\n\nconst facebook = keyframes` \n  0% {\n    top: 8px;\n    height: 64px;\n  }\n  50%, 100% {\n    top: 24px;\n    height: 32px;\n  }\n`;\n\nexport const BaseDiv = styled.div`\n  display: inline-block;\n  position: absolute;\n  left: 8px;\n  width: 16px;\n  background: khaki;\n  animation: ${facebook} 1.2s cubic-bezier(0, 0.5, 0.5, 1) infinite;\n\n  :nth-child(1) {\n    left: 8px;\n    animation-delay: -0.24s;\n  }\n  :nth-child(2) {\n    left: 32px;\n    animation-delay: -0.12s;\n  }\n  :nth-child(3) {\n    left: 56px;\n    animation-delay: 0;\n  }\n`;\n","import React from \"react\";\nimport { Base, BaseDiv } from \"./LoadingComponent.css\";\n\nexport const LoadingComponent: React.FC = () => (\n  <Base>\n    <BaseDiv></BaseDiv>\n    <BaseDiv></BaseDiv>\n    <BaseDiv></BaseDiv>\n  </Base>\n);\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  margin-bottom: 50px;\n  min-height: 200px;\n\n  @media (orientation: landscape) and (max-width: 768px) {\n    min-height: 100px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 20px;\n  text-transform: uppercase;\n\n  @media (min-width: 768px) {\n    font-size: 25px;\n  }\n`;\n\nexport const Image = styled.img`\n  margin-top: 10px;\n  max-width: 100px;\n  max-height: 100px;\n  transform: scale(1.4);\n`;\n","import React, { useCallback, useEffect, useRef, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StateInterface } from \"./../../store/interfaces\";\n\nimport { SharedButton } from \"./../SharedButton/SharedButton\";\nimport { LoadingComponent } from \"../LoadingComponent/LoadingComponent\";\nimport {\n  fetchRandomPokemon,\n  fetchRandomPokemonPNG,\n} from \"../../store/actions/randomPokeAction\";\n\nimport { randomNumber } from \"./../../functions/randomNumber\";\nimport { Wrapper, Container, Title, Image } from \"./RandomPokemonView.css\";\nimport questionMark from \"./../../images/questionMark.png\";\n\nconst pokemonCount = 807;\n\nexport const RandomPokemonView: React.FC = () => {\n  const randomPokemon = useSelector(\n    (state: StateInterface) => state.randomPokemon\n  );\n  const { fetchingRandom, errorRandom, fetchingRandomPng } = randomPokemon;\n  const { name, id, sprites } = randomPokemon.data;\n  const prevPokeID = useRef(id);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (sprites && id !== 0) {\n      if (id !== prevPokeID.current) {\n        dispatch(fetchRandomPokemonPNG(sprites.front_default));\n        prevPokeID.current = id;\n      }\n    }\n  }, [id, sprites, dispatch]);\n\n  const renderPokeImage = useMemo(\n    () =>\n      !fetchingRandomPng ? (\n        <Image\n          src={\n            sprites.front_default.length ? sprites.front_default : questionMark\n          }\n          alt=\"Pokemon\"\n          title={name}\n        />\n      ) : (\n        <LoadingComponent />\n      ),\n    [fetchingRandomPng, name, sprites]\n  );\n\n  const handleClickRandom = useCallback(() => {\n    dispatch(fetchRandomPokemon(randomNumber(pokemonCount)));\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Container>\n        {!fetchingRandom && !errorRandom ? (\n          <>\n            <Title>{`${name} ${id ? `(${id})` : \"\"}`}</Title>\n            {renderPokeImage}\n          </>\n        ) : (\n          <LoadingComponent />\n        )}\n      </Container>\n      <SharedButton fun={handleClickRandom}>Losuj</SharedButton>\n    </Wrapper>\n  );\n};\n","import {\n  FETCHING_RANDOM,\n  FETCHED_RANDOM,\n  ERROR_RANDOM,\n  FETCHING_RANDOM_PNG,\n  FETCHED_RANDOM_PNG,\n  ERROR_RANDOM_PNG,\n} from \"./../types/\";\nconst URL = \"https://pokeapi.co/api/v2/pokemon/\";\n\nexport const fetchRandomPokemon = (pokemonId: number) => {\n  return async (dispatch: Function) => {\n    dispatch({\n      type: FETCHING_RANDOM,\n    });\n\n    return await fetch(`${URL}${pokemonId}`)\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        }\n      })\n      .then((res) =>\n        dispatch({\n          type: FETCHED_RANDOM,\n          payload: res,\n        })\n      )\n      .catch((error) => {\n        dispatch({\n          type: ERROR_RANDOM,\n        });\n        console.log(error);\n      });\n  };\n};\n\nexport const fetchRandomPokemonPNG = (URL: string) => {\n  return async (dispatch: Function) => {\n    dispatch({\n      type: FETCHING_RANDOM_PNG,\n    });\n\n    return await fetch(URL)\n      .then((res) => {\n        if (res.status === 200) {\n          return res;\n        }\n      })\n      .then((res) =>\n        dispatch({\n          type: FETCHED_RANDOM_PNG,\n          payload: res?.url,\n        })\n      )\n      .catch((error) => {\n        dispatch({\n          type: ERROR_RANDOM_PNG,\n        });\n        console.log(error);\n      });\n  };\n};\n","export const FETCHING_RANDOM = \"FETCHING_RANDOM\";\nexport const FETCHED_RANDOM = \"FETCHED_RANDOM\";\nexport const ERROR_RANDOM = \"ERROR_RANDOM\";\n\nexport const FETCHING_RANDOM_PNG = \"FETCHING_RANDOM_PNG\";\nexport const FETCHED_RANDOM_PNG = \"FETCHED_RANDOM_PNG\";\nexport const ERROR_RANDOM_PNG = \"ERROR_RANDOM_PNG\";\n\nexport const FETCHING_LIST = \"FETCHING_LIST\";\nexport const FETCHED_LIST = \"FETCHED_LIST\";\nexport const ERROR_LIST = \"ERROR_LIST\";\n\nexport const FETCHING_POKE_IMAGES = \"FETCHING_POKE_IMAGES\";\nexport const FETCHED_POKE_IMAGES = \"FETCHED_POKE_IMAGES\";\nexport const ERROR_POKE_IMAGES = \"ERROR_POKE_IMAGES\";\n\nexport const FETCHING_POKE_PNG = \"FETCHING_POKE_PNG\";\nexport const FETCHED_POKE_PNG = \"FETCHED_POKE_PNG\";\nexport const ERROR_POKE_PNG = \"ERROR_POKE_PNG\";\n\nexport const NEXT_LIST_PAGE = \"NEXT_LIST_PAGE\";\nexport const PREV_LIST_PAGE = \"PREV_LIST_PAGE\";\nexport const SET_LIST_PAGE = \"SET_LIST_PAGE\";\nexport const RESET_LIST_PAGE = \"RESET_LIST_PAGE\";\n\nexport const CHANGE_NUMBER_OF_POKEMON_PER_PAGE =\n  \"CHANGE_NUMBER_OF_POKEMON_PER_PAGE\";\n","export const randomNumber = (scope: number) =>\n  Math.floor(Math.random() * scope + 1);\n","import {\n  FETCHING_LIST,\n  FETCHED_LIST,\n  ERROR_LIST,\n  FETCHING_POKE_IMAGES,\n  FETCHED_POKE_IMAGES,\n  ERROR_POKE_IMAGES,\n  FETCHING_POKE_PNG,\n  FETCHED_POKE_PNG,\n  ERROR_POKE_PNG,\n  NEXT_LIST_PAGE,\n  PREV_LIST_PAGE,\n  SET_LIST_PAGE,\n  CHANGE_NUMBER_OF_POKEMON_PER_PAGE,\n  RESET_LIST_PAGE,\n} from \"../types\";\n\nexport const fetchPokemonList = (URL: string) => {\n  return async (dispatch: Function) => {\n    dispatch({\n      type: FETCHING_LIST,\n    });\n\n    return await fetch(`${URL}`)\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        }\n      })\n      .then((res) => {\n        dispatch({\n          type: FETCHED_LIST,\n          payload: res,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: ERROR_LIST,\n        });\n        console.log(error);\n      });\n  };\n};\n\nexport const fetchPokemonImagesUrls = (\n  listOfUrls: { name: string; url: string }[]\n) => {\n  return async (dispatch: Function) => {\n    dispatch({\n      type: FETCHING_POKE_IMAGES,\n    });\n\n    return await Promise.all(\n      listOfUrls.map(\n        async (result: { url: string }) =>\n          await (await fetch(result.url))\n            .json()\n            .then((res) => {\n              dispatch({\n                type: FETCHED_POKE_IMAGES,\n                payload: res.sprites.front_default,\n              });\n            })\n            .catch((error) => {\n              dispatch({\n                type: ERROR_POKE_IMAGES,\n              });\n              console.log(error);\n            })\n      )\n    );\n  };\n};\n\nexport const fetchPokemonPNG = (listOfUrls: string[]) => {\n  return async (dispatch: Function) => {\n    dispatch({\n      type: FETCHING_POKE_PNG,\n    });\n\n    return await Promise.all(\n      listOfUrls.map(\n        async (result: string) =>\n          await fetch(result)\n            .then((res) => {\n              dispatch({\n                type: FETCHED_POKE_PNG,\n                payload: res.url,\n              });\n            })\n            .catch((error) => {\n              dispatch({\n                type: ERROR_POKE_PNG,\n              });\n              console.log(error);\n            })\n      )\n    );\n  };\n};\n\nexport const nextPage = () => ({\n  type: NEXT_LIST_PAGE,\n});\n\nexport const prevPage = () => ({\n  type: PREV_LIST_PAGE,\n});\n\nexport const setPageAction = (pageNumber: number) => ({\n  type: SET_LIST_PAGE,\n  payload: pageNumber,\n});\n\nexport const resetPages = () => ({\n  type: RESET_LIST_PAGE,\n});\n\nexport const changeNumberOfPokemonPerPage = (num: number) => ({\n  type: CHANGE_NUMBER_OF_POKEMON_PER_PAGE,\n  payload: num,\n});\n","import styled from \"styled-components\";\n\nexport const ControlPanelWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 45%;\n  margin: 10px 0;\n\n  @media (min-width: 768px) {\n    width: 20%;\n  }\n\n  .desc {\n    font-size: 10px;\n    text-align: center;\n    margin-top: 20px;\n\n    @media (min-width: 768px) {\n      font-size: 14px;\n    }\n  }\n\n  .prev-page {\n    transform: rotate(180deg);\n  }\n\n  .prev-page,\n  .next-page {\n    font-size: 14px;\n\n    @media (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-around;\n  align-items: center;\n  margin-top: 10px;\n`;\n\nexport const CounterPageForm = styled.form`\n  margin: 10px;\n  width: 30%;\n`;\n\nexport const NumberInput = styled.input`\n  padding: 5px;\n  border: none;\n  width: 100%;\n  text-align: center;\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  &:focus {\n    outline-style: none;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { StateInterface } from \"./../../../store/interfaces\";\n\nimport { SharedButton } from \"./../../SharedButton/SharedButton\";\nimport {\n  fetchPokemonList,\n  prevPage,\n  nextPage,\n  setPageAction,\n  resetPages,\n  changeNumberOfPokemonPerPage,\n} from \"./../../../store/actions/pokemonListAction\";\n\nimport {\n  ControlPanelWrapper,\n  ButtonWrapper,\n  CounterPageForm,\n  NumberInput,\n} from \"./PagesControlPanel.css\";\n\nexport const PagesControlPanel: React.FC<PagesControlPanelProps> = ({\n  pokePerPageButtons,\n}) => {\n  const pokemonList = useSelector((state: StateInterface) => state.pokemonList);\n  const { pokemonsPerPage, currentPage } = pokemonList;\n  const { next, previous, count } = pokemonList.data;\n  const [page, setPage] = useState(String(currentPage));\n  const dispatch = useDispatch();\n\n  const renderPerPageButtons = pokePerPageButtons.map((perPage: number) => (\n    <SharedButton\n      key={perPage}\n      fun={() => {\n        dispatch(changeNumberOfPokemonPerPage(perPage));\n        dispatch(resetPages());\n        setPage(\"1\");\n      }}\n    >\n      {perPage}\n    </SharedButton>\n  ));\n\n  const handleSubmitPage = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (\n      Number(page) !== currentPage &&\n      page !== \"\" &&\n      Number(page) > 0 &&\n      Number(page) <= count / pokemonsPerPage\n    ) {\n      const URL = `https://pokeapi.co/api/v2/pokemon?offset=${\n        Number(page) * pokemonsPerPage - pokemonsPerPage\n      }&limit=${pokemonsPerPage}`;\n      dispatch(setPageAction(Number(page)));\n      dispatch(fetchPokemonList(URL));\n    } else if (Number(page) > count / pokemonsPerPage) {\n      setPage(String(Math.floor(count / pokemonsPerPage)));\n    }\n  };\n\n  const handlePrevPage = () => {\n    if (previous) {\n      dispatch(prevPage());\n      dispatch(fetchPokemonList(previous));\n      setPage(String(currentPage - 1));\n    }\n  };\n\n  const handleNextPage = () => {\n    const searchingText = \"limit=\";\n    const isCorrectLimit = next?.slice(\n      next.indexOf(searchingText) + searchingText.length,\n      next.length\n    );\n    if (next && Number(isCorrectLimit) === pokemonsPerPage) {\n      dispatch(nextPage());\n      dispatch(fetchPokemonList(next));\n      setPage(String(currentPage + 1));\n    }\n  };\n\n  return (\n    <ControlPanelWrapper>\n      <ButtonWrapper>\n        <SharedButton fun={() => handlePrevPage()}>\n          <i className=\"fas fa-chevron-right prev-page\"></i>\n        </SharedButton>\n        <CounterPageForm onSubmit={(e) => handleSubmitPage(e)}>\n          <NumberInput\n            type=\"number\"\n            min=\"1\"\n            onChange={(e) => setPage(e.target.value)}\n            value={String(page)}\n          />\n        </CounterPageForm>\n        <SharedButton fun={() => handleNextPage()}>\n          <i className=\"fas fa-chevron-right next-page\"></i>\n        </SharedButton>\n      </ButtonWrapper>\n      <p className=\"desc\">Ilość pokemonów na stronę:</p>\n      <ButtonWrapper>{renderPerPageButtons}</ButtonWrapper>\n    </ControlPanelWrapper>\n  );\n};\n\ninterface PagesControlPanelProps {\n  pokePerPageButtons: number[];\n}\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-height: 100%;\n  padding: 10px;\n`;\n\nexport const List = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  width: 95%;\n  flex-grow: 1;\n  margin: 15px 0 0;\n  padding: 10px;\n\n  @media (min-width: 768px) {\n    width: 85%;\n  }\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: calc(100% / 3);\n  height: calc(100% / 3);\n  margin: 15px 0;\n  padding: 5px;\n  border-radius: 10px;\n  transition: 0.2s;\n\n  @media (min-width: 1024px) {\n    width: calc(100% / 4);\n    height: calc(100% / 4);\n    margin: 15px 20px;\n    background-color: rgba(0, 0, 0, 0.02);\n    :hover {\n      background-color: lightgray;\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const PokeName = styled.p`\n  text-transform: uppercase;\n  font-size: 10px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const Image = styled.img`\n  max-width: 80px;\n  max-height: 80px;\n  margin-top: 10px;\n\n  @media (min-width: 768px) {\n    max-width: 100px;\n    max-height: 100px;\n  }\n`;\n","import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { StateInterface } from \"./../../store/interfaces\";\n\nimport { PagesControlPanel } from \"./PagesControlPanel/PagesControlPanel\";\nimport { LoadingComponent } from \"./../LoadingComponent/LoadingComponent\";\n\nimport { Wrapper, List, Item, PokeName, Image } from \"./PokemonList.css\";\nimport questionMark from \"./../../images/questionMark.png\";\n\nexport const PokemonList: React.FC = () => {\n  const pokemonList = useSelector((state: StateInterface) => state.pokemonList);\n  const { fetchingList, pngs, pokemonsPerPage } = pokemonList;\n  const { results } = pokemonList.data;\n\n  const pokemonsWithImages = useMemo(() => {\n    if (!(pngs.length < pokemonsPerPage)) {\n      return results.map((poke) => {\n        const slicedPokemonIdFromURL = poke.url.slice(\n          poke.url.indexOf(\"/pokemon/\"),\n          poke.url.length - 1\n        );\n        poke.image =\n          pngs.find((png) => png.includes(`${slicedPokemonIdFromURL}.png`)) ||\n          \"Not found\";\n        return poke;\n      });\n    }\n    return [];\n  }, [pngs, results, pokemonsPerPage]);\n\n  const renderItems = useMemo(\n    () =>\n      pokemonsWithImages.map((poke) => {\n        const pokemonImage =\n          poke.image === \"Not found\" ? (\n            <Image src={questionMark} alt={poke.name} />\n          ) : (\n            <Image src={poke.image} alt={poke.name} />\n          );\n        return (\n          <Item key={poke.name}>\n            <PokeName>{poke.name}</PokeName>\n            {pokemonImage}\n          </Item>\n        );\n      }),\n    [pokemonsWithImages]\n  );\n\n  return (\n    <Wrapper>\n      <List>\n        {fetchingList || pngs.length < pokemonsPerPage ? (\n          <LoadingComponent />\n        ) : (\n          renderItems\n        )}\n      </List>\n      <PagesControlPanel pokePerPageButtons={[6, 12, 33]} />\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const MainStyled = styled.main`\n  flex-grow: 1;\n  width: 100%;\n  background-color: whitesmoke;\n`;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { RandomPokemonView } from \"./../RandomPokemonView/RandomPokemonView\";\nimport { PokemonList } from \"./../PokemonList/PokemonList\";\n\nimport { MainStyled } from \"./Main.css\";\n\nexport const Main: React.FC = () => (\n  <MainStyled>\n    <Switch>\n      <Route path=\"/\" exact>\n        <RandomPokemonView />\n      </Route>\n      <Route path=\"/list\" exact>\n        <PokemonList />\n      </Route>\n    </Switch>\n  </MainStyled>\n);\n","import styled from \"styled-components\";\n\nexport const FooterStyled = styled.footer`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  padding: 5px 0;\n  background-color: gray;\n`;\n\nexport const TitleStyled = styled.p`\n  color: white;\n  font-size: 12px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const AuthorLink = styled.a`\n  color: khaki;\n  text-decoration: none;\n  transition: 0.2s;\n\n  @media (min-width: 1024px) {\n    :hover {\n      color: goldenrod;\n    }\n  }\n`;\n","import React from \"react\";\nimport { FooterStyled, TitleStyled, AuthorLink } from \"./Footer.css\";\n\nexport const Footer: React.FC = () => (\n  <FooterStyled>\n    <TitleStyled>\n      Projekt i realizacja{\" \"}\n      <AuthorLink\n        href=\"https://mkphercog.github.io/mywebsite/#/\"\n        target=\"blanc\"\n      >\n        Marcin Hercog\n      </AuthorLink>\n    </TitleStyled>\n  </FooterStyled>\n);\n","import styled, { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\n\nexport const GlobalStyles = createGlobalStyle`\n  ${normalize}\n*{\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n font-family: Arial, Helvetica, sans-serif;\n} \n`;\n\nexport const AppStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  margin: 0 auto;\n\n  @media (min-width: 1024px) {\n    width: 1024px;\n  }\n`;\n","import React, { useEffect } from \"react\";\n\nimport { Header } from \"./components/Header/Header\";\nimport { Navigation } from \"./components/Navigation/Navigation\";\nimport { Main } from \"./components/Main/Main\";\nimport { Footer } from \"./components/Footer/Footer\";\nimport {\n  fetchPokemonList,\n  fetchPokemonImagesUrls,\n  fetchPokemonPNG,\n} from \"./store/actions/pokemonListAction\";\nimport { StateInterface } from \"./store/interfaces\";\n\nimport { GlobalStyles, AppStyled } from \"./index.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst startingPoint = 0;\n\nexport const App = () => {\n  const pokemonList = useSelector((state: StateInterface) => state.pokemonList);\n  const { fetchingList, images, pokemonsPerPage } = pokemonList;\n  const { results } = pokemonList.data;\n  const URL = `https://pokeapi.co/api/v2/pokemon?limit=${pokemonsPerPage}&offset=${startingPoint}`;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPokemonList(URL));\n  }, [dispatch, URL]);\n\n  useEffect(() => {\n    if (!fetchingList) dispatch(fetchPokemonImagesUrls(results));\n  }, [fetchingList, results, dispatch]);\n\n  useEffect(() => {\n    if (images.length === pokemonsPerPage) dispatch(fetchPokemonPNG(images));\n  }, [images, dispatch, pokemonsPerPage]);\n\n  return (\n    <AppStyled>\n      <Header />\n      <Navigation />\n      <Main />\n      <Footer />\n      <GlobalStyles />\n    </AppStyled>\n  );\n};\n","import {\n  FETCHING_RANDOM,\n  FETCHED_RANDOM,\n  ERROR_RANDOM,\n  FETCHING_RANDOM_PNG,\n  FETCHED_RANDOM_PNG,\n  ERROR_RANDOM_PNG,\n} from \"./../types\";\n\nconst initialState = {\n  fetchingRandom: false,\n  fetchedRandom: false,\n  errorRandom: false,\n  fetchingRandomPng: false,\n  fetchedRandomPng: false,\n  errorRandomPng: false,\n  data: {\n    name: \"\",\n    id: 0,\n    sprites: {\n      front_default: \"\",\n    },\n  },\n  png: \"\",\n};\n\nexport const randomPokeReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case FETCHING_RANDOM:\n      return {\n        ...state,\n        fetchingRandom: true,\n        fetchedRandom: false,\n        errorRandom: false,\n        data: {\n          name: \"\",\n          id: 0,\n          sprites: {\n            front_default: \"\",\n          },\n        },\n        png: \"\",\n      };\n    case FETCHED_RANDOM:\n      return {\n        ...state,\n        fetchingRandom: false,\n        fetchedRandom: true,\n        errorRandom: false,\n        data: action.payload,\n      };\n    case ERROR_RANDOM:\n      return {\n        ...state,\n        fetchingRandom: false,\n        fetchedRandom: false,\n        errorRandom: true,\n        data: {\n          name: \"\",\n          id: 0,\n          sprites: {\n            front_default: \"\",\n          },\n        },\n      };\n\n    case FETCHING_RANDOM_PNG:\n      return {\n        ...state,\n        fetchingRandomPng: true,\n        fetchedRandomPng: false,\n        errorRandomPng: false,\n        png: \"\",\n      };\n    case FETCHED_RANDOM_PNG:\n      return {\n        ...state,\n        fetchingRandomPng: false,\n        fetchedRandomPng: true,\n        errorRandomPng: false,\n        png: action.payload,\n      };\n    case ERROR_RANDOM_PNG:\n      return {\n        ...state,\n        fetchingRandomPng: false,\n        fetchedRandomPng: false,\n        errorRandomPng: true,\n        png: \"\",\n      };\n    default:\n      return state;\n  }\n};\n\ninterface Action {\n  type: string;\n  payload: {\n    name: string;\n    id: number;\n    sprites: {\n      front_default: string;\n    };\n  };\n}\n","import {\n  FETCHING_LIST,\n  FETCHED_LIST,\n  ERROR_LIST,\n  FETCHING_POKE_IMAGES,\n  FETCHED_POKE_IMAGES,\n  ERROR_POKE_IMAGES,\n  FETCHING_POKE_PNG,\n  FETCHED_POKE_PNG,\n  ERROR_POKE_PNG,\n  NEXT_LIST_PAGE,\n  PREV_LIST_PAGE,\n  SET_LIST_PAGE,\n  RESET_LIST_PAGE,\n  CHANGE_NUMBER_OF_POKEMON_PER_PAGE,\n} from \"../types\";\n\nconst initialState = {\n  fetchingList: false,\n  fetchedList: false,\n  errorList: false,\n  fetchingImages: false,\n  fetchedImages: false,\n  errorImages: false,\n  fetchingPNG: false,\n  fetchedPNG: false,\n  errorPNG: false,\n  data: {\n    count: 0,\n    next: \"\",\n    previous: \"\",\n    results: [],\n  },\n  images: [],\n  pngs: [],\n  currentPage: 1,\n  pokemonsPerPage: 6,\n};\n\nexport const pokemonListReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case FETCHING_LIST:\n      return {\n        ...state,\n        fetchingList: true,\n        fetchedList: false,\n        errorList: false,\n        data: {\n          count: 0,\n          next: \"\",\n          previous: \"\",\n          results: [],\n        },\n        images: [],\n        pngs: [],\n      };\n    case FETCHED_LIST:\n      return {\n        ...state,\n        fetchingList: false,\n        fetchedList: true,\n        errorList: false,\n        data: action.payload,\n      };\n    case ERROR_LIST:\n      return {\n        ...state,\n        fetchingList: false,\n        fetchedList: false,\n        errorList: true,\n        data: {\n          count: 0,\n          next: \"\",\n          previous: \"\",\n          results: [],\n        },\n      };\n\n    case FETCHING_POKE_IMAGES:\n      return {\n        ...state,\n        fetchingImages: true,\n        fetchedImages: false,\n        errorImages: false,\n        images: [],\n      };\n    case FETCHED_POKE_IMAGES:\n      return {\n        ...state,\n        fetchingImages: false,\n        fetchedImages: true,\n        errorImages: false,\n        images: [...state.images, action.payload],\n      };\n    case ERROR_POKE_IMAGES:\n      return {\n        ...state,\n        fetchingImages: false,\n        fetchedImages: false,\n        errorImages: true,\n        images: [],\n      };\n\n    case FETCHING_POKE_PNG:\n      return {\n        ...state,\n        fetchingPNG: true,\n        fetchedPNG: false,\n        errorPNG: false,\n        pngs: [],\n      };\n    case FETCHED_POKE_PNG:\n      return {\n        ...state,\n        fetchingPNG: false,\n        fetchedPNG: true,\n        errorPNG: false,\n        pngs: [...state.pngs, action.payload],\n      };\n    case ERROR_POKE_PNG:\n      return {\n        ...state,\n        fetchingPNG: false,\n        fetchedPNG: false,\n        errorPNG: true,\n        pngs: [],\n      };\n\n    case NEXT_LIST_PAGE:\n      return {\n        ...state,\n        currentPage: state.currentPage + 1,\n      };\n    case PREV_LIST_PAGE:\n      return {\n        ...state,\n        currentPage: state.currentPage - 1,\n      };\n    case SET_LIST_PAGE:\n      return {\n        ...state,\n        currentPage: action.payload,\n      };\n    case RESET_LIST_PAGE:\n      return {\n        ...state,\n        currentPage: 1,\n      };\n    case CHANGE_NUMBER_OF_POKEMON_PER_PAGE:\n      return {\n        ...state,\n        pokemonsPerPage: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\ninterface Action {\n  type: string;\n  payload: {} | [];\n}\n","import { combineReducers } from \"redux\";\nimport { randomPokeReducer } from \"./randomPokeReducer\";\nimport { pokemonListReducer } from \"./pokemonListReducer\";\n\nexport const rootReducer = combineReducers({\n  randomPokemon: randomPokeReducer,\n  pokemonList: pokemonListReducer,\n});\n","import { createStore } from \"redux\";\nimport { rootReducer } from \"./../store/reducers/\";\nimport { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}